## Test Format for JavaScript Quiz App Project

### Project Overview
Create a **Quiz App** that allows users to take a quiz, see their score, and review their answers. The app should be interactive and visually appealing, providing users with a seamless experience.

### Features
1. **Start Screen**: A screen with a start button to begin the quiz.
2. **Quiz Questions**: Multiple-choice questions displayed one at a time.
3. **Answer Selection**: Users can select an answer for each question.
4. **Score Calculation**: At the end of the quiz, display the user’s score.
5. **Review Answers**: Allow users to review their answers after completing the quiz.
6. **Timer**: Optional: Add a timer for each question.

### Instructions

123
1. **Setup**: 
   - Create an HTML file (`index.html`), a CSS file (`styles.css`), and a JavaScript file (`script.js`).
   - Link the CSS and JavaScript files in your HTML.

2. **HTML Structure**:
   - Design a simple layout for the quiz app, including:
     - A header for the quiz title.
     - A main section for displaying questions and answers.
     - A start button.
     - A results section to show the score at the end.

3. **CSS Styling**:
   - Style the app to make it visually appealing.
   - Ensure that the layout is responsive for different screen sizes.

4. **JavaScript Logic**:
   - Create an array of questions, where each question is an object containing the question text, options, and the correct answer.
   - Write a function to display the current question and options.
   - Implement the functionality to select an answer and store the user's selections.
   - Create a function to calculate the score based on the user's selections and the correct answers.
   - Display the score and allow users to review their answers.

5. **Optional Features**:
   - Add a timer for each question.
   - Include a loading screen or transition effects between questions.

### Hints
- **Array of Questions**: Structure your questions in an array of objects. Each object can have properties like `question`, `options`, and `correctAnswer`. 
  ```javascript
  const questions = [
      {
          question: "What is the capital of France?",
          options: ["Berlin", "Madrid", "Paris", "Lisbon"],
          correctAnswer: "Paris"
      },
      // Add more questions here
  ];
  ```
  
- **Display Questions**: Use `innerHTML` to dynamically display the question and options on the webpage.
  
- **Event Listeners**: Use `addEventListener` for buttons to handle answer selection and navigation.

- **Calculate Score**: Loop through the user’s answers and compare them to the correct answers to calculate the score.
  ```javascript
  function calculateScore(userAnswers) {
      let score = 0;
      userAnswers.forEach((answer, index) => {
          if (answer === questions[index].correctAnswer) {
              score++;
          }
      });
      return score;
  }
  ```

- **Review Answers**: Create a review section that displays each question, the user’s selected answer, and the correct answer for comparison.

### Testing Your App
1. Test the app by answering the quiz multiple times to ensure it displays the correct score each time.
2. Verify that the review feature works as intended and shows the correct answers.
3. If you added a timer, check if it counts down and affects the quiz experience.

### Submission
- Ensure your code is clean and well-commented.
- Make sure the app is fully functional.
- Submit your project files: `index.html`, `styles.css`, and `script.js`.

---

Feel free to adjust any part of the format to better suit your needs or to align with specific requirements for your project. Good luck with your Quiz App!

